# Generated by Django 4.2.7 on 2025-05-24 03:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('age', models.PositiveIntegerField(editable=False)),
                ('mobile_primary', models.CharField(max_length=15)),
                ('mobile_secondary', models.CharField(blank=True, max_length=15, null=True)),
                ('email_primary', models.EmailField(max_length=254)),
                ('email_secondary', models.EmailField(blank=True, max_length=254, null=True)),
                ('address_line1', models.CharField(max_length=200)),
                ('address_line2', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(default='India', max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('medical_license_number', models.CharField(max_length=50, unique=True)),
                ('license_issuing_authority', models.CharField(max_length=200)),
                ('license_issue_date', models.DateField()),
                ('license_expiry_date', models.DateField()),
                ('years_of_experience', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('consultation_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('consultation_duration', models.PositiveIntegerField(default=30, help_text='Duration in minutes')),
                ('consultation_type', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('both', 'Both')], default='both', max_length=20)),
                ('is_available_online', models.BooleanField(default=True)),
                ('is_available_offline', models.BooleanField(default=True)),
                ('bio', models.TextField(blank=True, help_text='Professional biography', null=True)),
                ('languages_spoken', models.CharField(blank=True, help_text='Comma-separated languages', max_length=500, null=True)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('total_consultations', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('on_leave', 'On Leave'), ('suspended', 'Suspended'), ('retired', 'Retired')], default='active', max_length=20)),
                ('joining_date', models.DateField()),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='doctors/profiles/')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='doctors/signatures/')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=50, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'doctors',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(default='India', max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('hospital_type', models.CharField(choices=[('government', 'Government'), ('private', 'Private'), ('semi_government', 'Semi-Government'), ('trust', 'Trust'), ('corporate', 'Corporate')], default='private', max_length=50)),
                ('bed_capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'hospitals',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree_name', models.CharField(max_length=200)),
                ('degree_type', models.CharField(choices=[('undergraduate', 'Undergraduate'), ('postgraduate', 'Postgraduate'), ('diploma', 'Diploma'), ('certificate', 'Certificate'), ('fellowship', 'Fellowship'), ('phd', 'PhD')], max_length=20)),
                ('short_name', models.CharField(help_text='e.g., MBBS, MD, MS', max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration_years', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'doctor_qualifications',
                'ordering': ['degree_type', 'degree_name'],
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(help_text='Specialty code (e.g., CARD, NEURO)', max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Specialty',
                'verbose_name_plural': 'Specialties',
                'db_table': 'doctor_specialties',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DoctorSpecialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False, help_text='Primary specialty')),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('board_certified', models.BooleanField(default=False)),
                ('certification_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctors.doctor')),
                ('specialty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctors.specialty')),
            ],
            options={
                'db_table': 'doctor_specialties_through',
                'unique_together': {('doctor', 'specialty')},
            },
        ),
        migrations.CreateModel(
            name='DoctorQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_name', models.CharField(max_length=200)),
                ('university_name', models.CharField(max_length=200)),
                ('year_started', models.PositiveIntegerField()),
                ('year_completed', models.PositiveIntegerField()),
                ('grade_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='doctors/certificates/')),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctors.doctor')),
                ('qualification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctors.qualification')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_qualifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'doctor_qualifications_through',
                'ordering': ['-year_completed'],
                'unique_together': {('doctor', 'qualification', 'institution_name')},
            },
        ),
        migrations.CreateModel(
            name='DoctorExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(choices=[('intern', 'Intern'), ('resident', 'Resident'), ('fellow', 'Fellow'), ('consultant', 'Consultant'), ('senior_consultant', 'Senior Consultant'), ('head_of_department', 'Head of Department'), ('director', 'Director'), ('chief_medical_officer', 'Chief Medical Officer')], max_length=50)),
                ('department', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Leave blank if currently working', null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('responsibilities', models.TextField(blank=True, null=True)),
                ('achievements', models.TextField(blank=True, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='doctors.doctor')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctors.hospital')),
            ],
            options={
                'db_table': 'doctor_experiences',
                'ordering': ['-start_date'],
            },
        ),
        migrations.AddField(
            model_name='doctor',
            name='qualifications',
            field=models.ManyToManyField(related_name='doctors', through='doctors.DoctorQualification', to='doctors.qualification'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='specialties',
            field=models.ManyToManyField(related_name='doctors', through='doctors.DoctorSpecialty', to='doctors.specialty'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DoctorReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review_text', models.TextField(blank=True, null=True)),
                ('consultation_date', models.DateField()),
                ('is_verified', models.BooleanField(default=False)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='doctors.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'doctor_reviews',
                'ordering': ['-created_at'],
                'unique_together': {('doctor', 'patient', 'consultation_date')},
            },
        ),
        migrations.CreateModel(
            name='DoctorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('consultation_type', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('both', 'Both')], default='both', max_length=20)),
                ('max_patients', models.PositiveIntegerField(default=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='doctors.doctor')),
            ],
            options={
                'db_table': 'doctor_availability',
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('doctor', 'day_of_week', 'start_time')},
            },
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['medical_license_number'], name='doctors_medical_9c36b6_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['status'], name='doctors_status_f1630d_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['city', 'state'], name='doctors_city_e5bb73_idx'),
        ),
    ]
