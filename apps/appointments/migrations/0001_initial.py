# Generated by Django 4.2.7 on 2025-05-24 04:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('doctors', '0001_initial'),
        ('patients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('appointment_date', models.DateField()),
                ('appointment_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('end_time', models.TimeField(editable=False)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('chief_complaint', models.TextField(help_text="Patient's main concern/reason for visit")),
                ('symptoms', models.TextField(blank=True, help_text='Detailed symptoms', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes', null=True)),
                ('is_follow_up', models.BooleanField(default=False)),
                ('referred_by', models.CharField(blank=True, help_text='Referring doctor', max_length=200, null=True)),
                ('referral_notes', models.TextField(blank=True, null=True)),
                ('consultation_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('reminder_sent_at', models.DateTimeField(blank=True, null=True)),
                ('sms_reminder', models.BooleanField(default=True)),
                ('email_reminder', models.BooleanField(default=True)),
                ('checked_in_at', models.DateTimeField(blank=True, null=True)),
                ('actual_start_time', models.TimeField(blank=True, null=True)),
                ('actual_end_time', models.TimeField(blank=True, null=True)),
                ('waiting_time_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'appointments',
                'ordering': ['appointment_date', 'appointment_time'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(default=30, help_text='Default duration in minutes')),
                ('color_code', models.CharField(default='#007bff', help_text='Hex color code for calendar display', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_referral', models.BooleanField(default=False)),
                ('is_emergency', models.BooleanField(default=False)),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'appointment_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('push', 'Push Notification'), ('call', 'Phone Call')], max_length=20)),
                ('scheduled_time', models.DateTimeField(help_text='When to send the reminder')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200, null=True)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='appointments.appointment')),
            ],
            options={
                'db_table': 'appointment_reminders',
                'ordering': ['scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('doctor_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('staff_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('facility_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('wait_time_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('positive_feedback', models.TextField(blank=True, null=True)),
                ('improvement_suggestions', models.TextField(blank=True, null=True)),
                ('additional_comments', models.TextField(blank=True, null=True)),
                ('would_recommend', models.BooleanField(null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='appointments.appointment')),
            ],
            options={
                'db_table': 'appointment_feedback',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='appointment_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointments.appointmenttype'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='cancelled_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_appointments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointment',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_appointments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='doctors.doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='original_appointment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rescheduled_appointments', to='appointments.appointment'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='parent_appointment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follow_up_appointments', to='appointments.appointment'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='patients.patient'),
        ),
        migrations.CreateModel(
            name='WaitingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_date', models.DateField(blank=True, null=True)),
                ('preferred_time_start', models.TimeField(blank=True, null=True)),
                ('preferred_time_end', models.TimeField(blank=True, null=True)),
                ('flexible_scheduling', models.BooleanField(default=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('reason', models.TextField(help_text='Reason for appointment')),
                ('urgency_notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('notified', 'Notified'), ('appointed', 'Appointed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='active', max_length=20)),
                ('notified_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('contact_phone', models.CharField(max_length=15)),
                ('contact_email', models.EmailField(max_length=254)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointments.appointmenttype')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waiting_list', to='doctors.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waiting_list_entries', to='patients.patient')),
            ],
            options={
                'db_table': 'waiting_list',
                'ordering': ['priority', 'created_at'],
                'indexes': [models.Index(fields=['doctor', 'status', 'priority'], name='waiting_lis_doctor__1e28c6_idx'), models.Index(fields=['preferred_date'], name='waiting_lis_preferr_115e58_idx')],
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('slot_duration', models.PositiveIntegerField(default=30, help_text='Duration of each slot in minutes')),
                ('max_patients', models.PositiveIntegerField(default=1, help_text='Maximum patients per slot')),
                ('is_available', models.BooleanField(default=True)),
                ('date_override', models.DateField(blank=True, help_text='Override for specific date', null=True)),
                ('is_holiday', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='doctors.doctor')),
            ],
            options={
                'db_table': 'time_slots',
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('doctor', 'day_of_week', 'start_time', 'date_override')},
            },
        ),
        migrations.CreateModel(
            name='AppointmentAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('slot_duration', models.PositiveIntegerField(default=30, help_text='Duration in minutes')),
                ('total_slots', models.PositiveIntegerField(default=1)),
                ('booked_slots', models.PositiveIntegerField(default=0)),
                ('blocked_slots', models.PositiveIntegerField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('reason_unavailable', models.CharField(blank=True, max_length=200, null=True)),
                ('special_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_slots', to='doctors.doctor')),
            ],
            options={
                'db_table': 'appointment_availability',
                'ordering': ['date', 'start_time'],
                'unique_together': {('doctor', 'date', 'start_time')},
            },
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['appointment_id'], name='appointment_appoint_4da827_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['appointment_date', 'appointment_time'], name='appointment_appoint_f2c2fb_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['doctor', 'appointment_date'], name='appointment_doctor__4449b5_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', 'appointment_date'], name='appointment_patient_ee8848_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status'], name='appointment_status_9fecd6_idx'),
        ),
    ]
